[

  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/25",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/25/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/25/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/25/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/25",
    "id": 504527040,
    "node_id": "MDU6SXNzdWU1MDQ1MjcwNDA=",
    "number": 25,
    "title": "Additional triggers and info for dropped packets",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-09T09:29:23Z",
    "updated_at": "2019-10-09T09:29:23Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "The current text lists about 8 reasons for dropping packets.\r\nMicrosoft's implementation lists 60+ individual reasons (via @nibanks)\r\n\r\nSome of those:\r\n\r\n> LogDrop(\"Retry sent to server\");\r\nLogDrop(\"Already received server response\");\r\nLogDrop(\"No room for ODCID\");\r\nLogDrop(\"Invalid ODCID\");\r\nLogDrop(\"InitialToken alloc failed\");\r\nLogDrop(\"OrigCID alloc failed\");\r\nLogDrop(\"Max deferred datagram count reached\");\r\nLogDrop(\"Key no longer accepted\");\r\nLogDrop(\"SH packet during version negotiation\");\r\nLogDrop(\"Too short for HP\");\r\nLogDrop(\"Packet number too big\");\r\nLogDrop(\"Payload length less than encryption tag\");\r\nLogDrop(\"Generate new packet keys\");\r\nLogDrop(\"Decryption failure\");\r\nLogDrop(\"Invalid SH Reserved bits values\");\r\nLogDrop(\"Invalid LH Reserved bits values\");\r\nLogDrop(\"Duplicate packet number\");\r\nLogDrop(\"Key no longer accepted (batch)\");\r\nLogDrop(\"Failed to compute HP mask\");\r\nLogDrop(\"Different remote address\");\r\nLogDrop(\"Too small for Packet->Invariant\");\r\nLogDrop(\"LH no room for DestCID\");\r\nLogDrop(\"Zero length DestCID\");\r\nLogDrop(\"LH no room for SourceCID\");\r\nLogDrop(\"SH no room for DestCID\");\r\nLogDrop(\"DestCID don't match\");\r\nLogDrop(\"SourceCID don't match\");\r\nLogDrop(\"Greater than allowed max CID length\");\r\nLogDropWithValue(\"Invalid client/server packet type\", Packet->LH->Type);\r\nLogDrop(\"Invalid LH FixedBit bits values\");\r\nLogDrop(\"Long header has invalid token length\");\r\nLogDropWithValue(\"Long header has token length larger than buffer length\", TokenLengthVarInt);\r\nLogDrop(\"Long header has invalid payload length\");\r\nLogDropWithValue(\"Long header has length larger than buffer length\", LengthVarInt);\r\nLogDropWithValue(\"Long Header doesn't have enough room for packet number\",\r\nLogDrop(\"Invalid SH FixedBit bits values\");\r\nLogDrop(\"Non-initial packet not matched with a Connection\");\r\nLogDrop(\"Retry received after initial\");\r\n\r\nI feel that we don't need to list things in this level of detail in the qlog spec (the \"trigger\" field allows any text anyway). However, maybe some guidance text on this would be helpful and maybe a few more suggested triggers would be interesting. \r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/24",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/24/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/24/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/24/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/24",
    "id": 503556213,
    "node_id": "MDU6SXNzdWU1MDM1NTYyMTM=",
    "number": 24,
    "title": "Replace specific events with a single encompassing event",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-07T16:20:47Z",
    "updated_at": "2019-10-07T17:03:31Z",
    "closed_at": "2019-10-07T17:03:31Z",
    "author_association": "MEMBER",
    "body": "We want to reduce the total amount of events as much as possible.\r\n\r\nEspecially specific events for things happening in reaction to the receipt of a specific frame in a packet (e.g., ACK, MAX_DATA, etc.) can be removed, since they can usually be inferred from that frame. Initially we had separate events for these (e.g., \"packet_acknowledged\" or \"flow_control_updated\" but those were rarely used in addition to packet_received events + many implementations do not defer frame handling from reception.\r\n\r\nOne notable exception is @nibank's msquic, which does not log all frames in a received packet, but rather does log only specific events (e.g., packet_acknowledged). One of the reasons is because he feels logging each packet in full does not scale. Another reason for this pattern might be that an implementation does not wish to log all types of frames OR conversely, does not want to log packet-level information at all but only very select frames. \r\n\r\nTo support this use case and still keep a low amount of event types, I will add a \"frame_parsed\" encompassing event. This will log the frame with its associated data, but without the encompassing packet-level data. This prevents re-defining semantics for many events. The downside is that you sometimes might want to log e.g., \"packet_acknowledged\" a long time after frame receipt. In that case, you would pretend you're parsing the frame only then. I feel this is a good trade-off to make here though. "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/23",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/23/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/23/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/23/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/23",
    "id": 502525951,
    "node_id": "MDU6SXNzdWU1MDI1MjU5NTE=",
    "number": 23,
    "title": "Make triggers behave like mixins",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-04T09:20:09Z",
    "updated_at": "2019-10-04T10:41:15Z",
    "closed_at": "2019-10-04T10:41:15Z",
    "author_association": "MEMBER",
    "body": "Since no-one is implementing triggers as top-level fields and it was always unclear how to best approach them, we should punt them to optional properties of the \"data\" field instead. This allows their flexibility without their overhead. \r\n\r\nSee also issue #7 "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/22",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/22/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/22/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/22/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/22",
    "id": 502130174,
    "node_id": "MDU6SXNzdWU1MDIxMzAxNzQ=",
    "number": 22,
    "title": "Mark events by their importance",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-03T15:15:45Z",
    "updated_at": "2019-10-04T10:41:15Z",
    "closed_at": "2019-10-04T10:41:15Z",
    "author_association": "MEMBER",
    "body": "Not all events are equally useful in a debugging/tooling scenario.\r\nMark events according to order of usefulness/expectedness.\r\n\r\nFor example:\r\n- Core\r\n- Base\r\n- Extra"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/21",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/21/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/21/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/21/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/21",
    "id": 501446600,
    "node_id": "MDU6SXNzdWU1MDE0NDY2MDA=",
    "number": 21,
    "title": "Make event names more consistent",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-10-02T12:03:27Z",
    "updated_at": "2019-10-04T10:41:15Z",
    "closed_at": "2019-10-04T10:41:15Z",
    "author_association": "MEMBER",
    "body": "Change event names to the trend of \"metrics_updated\" instead of \"metric_update\".\r\nThis is what we use for \"packet_sent\" and \"packet_received\" etc. and it's nicer to have this everywhere. "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/20",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/20/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/20/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/20/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/20",
    "id": 493268868,
    "node_id": "MDU6SXNzdWU0OTMyNjg4Njg=",
    "number": 20,
    "title": "Better qpack support",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-09-13T11:12:21Z",
    "updated_at": "2019-10-08T14:50:35Z",
    "closed_at": "2019-10-08T14:50:35Z",
    "author_association": "MEMBER",
    "body": "Some comments from @lpardue on qpack support:\r\n\r\n> but how do you correlate a qpack header block event (or whatever you want to call it) to the header frame that it was carried in? maybe simply that header block event contains a stream_id for correlation\r\n\r\n> other option is add raw_header_block to the HeaderFrame event data\r\n\r\nThough that would still require additional events for encoder/decoder instructions, no?\r\n\r\n> a qpack event that can consist of encoder instructions, decoder instructions and/or header block\r\n\r\nSo this seems the better option then, combined with the stream_id and expectation that the qpack events are logged in the same order as HeaderFrame's... (though not sure how important the ordering is personally).\r\n\r\nOpen questions:\r\n- What about seeing what's in the dynamic table (or initial static table? or is that always the same?)? specific dynamic_table_updated event or... ?\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/19",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/19/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/19/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/19/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/19",
    "id": 490181199,
    "node_id": "MDU6SXNzdWU0OTAxODExOTk=",
    "number": 19,
    "title": "Make it possible to tie push_id to stream",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-09-06T07:46:24Z",
    "updated_at": "2019-09-06T07:46:24Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Thanks to @jlaine for reporting"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/18",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/18/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/18/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/18/events",
    "html_url": "https://github.com/quiclog/internet-drafts/pull/18",
    "id": 484466763,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzEwMzM1NzE2",
    "number": 18,
    "title": "Rename \"type\" property to \"packet_type\" in packet events",
    "user": {
      "login": "jlaine",
      "id": 1567624,
      "node_id": "MDQ6VXNlcjE1Njc2MjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1567624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlaine",
      "html_url": "https://github.com/jlaine",
      "followers_url": "https://api.github.com/users/jlaine/followers",
      "following_url": "https://api.github.com/users/jlaine/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlaine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlaine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlaine/subscriptions",
      "organizations_url": "https://api.github.com/users/jlaine/orgs",
      "repos_url": "https://api.github.com/users/jlaine/repos",
      "events_url": "https://api.github.com/users/jlaine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlaine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-08-23T10:53:01Z",
    "updated_at": "2019-08-23T12:30:44Z",
    "closed_at": "2019-08-23T12:30:44Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/quiclog/internet-drafts/pulls/18",
      "html_url": "https://github.com/quiclog/internet-drafts/pull/18",
      "diff_url": "https://github.com/quiclog/internet-drafts/pull/18.diff",
      "patch_url": "https://github.com/quiclog/internet-drafts/pull/18.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/17",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/17/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/17/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/17/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/17",
    "id": 473058475,
    "node_id": "MDU6SXNzdWU0NzMwNTg0NzU=",
    "number": 17,
    "title": "Simplify / fix group_id usage",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-07-25T20:35:32Z",
    "updated_at": "2019-10-02T14:09:23Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Right now, the group_id concept is -very- flexible. It can be in common_fields (e.g., 1 trace per connection) but it can also be in event_fields (combining several connections into 1 trace). That already puts quite a burden on tools to support this different approaches.\r\n\r\nThen, another problem comes up if you would have the same group_id across multiple traces (e.g., trace 1 has some events for group_id x, but trace 2 has some group_id x events as well.)\r\n\r\nNote: This concept was mainly added to support the spindump use case (https://github.com/EricssonResearch/spindump), CC @jariarkko. There, a network intermediary logs (aggregated) data on many connections and even protocols. It would be tedious for that setup to split everything out into separate traces. \r\n\r\nPossible solutions I currently see:\r\n- Only allow 1 of the options (e.g., group_id only in common_fields or only in event_fields). I'm not a big fan of this (common only is inflexible, event_fields only has much overhead)(also: common can be seen as a special case of event_fields, so that could be the implementation target)\r\n- Disallow the same group_id across different traces: I think this makes a lot of sense, my preference\r\n- Discard the whole group_id concept alltogether (in practice, this would lead to many different approaches in different tools. basically the same as event_fields only, only no standard way of calling the thing)\r\n\r\nAdditional suggestion: rename group_id to \"luid\" (locally unique identifier)\r\n\r\nThanks to @nibanks for reporting this"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/16",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/16/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/16/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/16/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/16",
    "id": 473054545,
    "node_id": "MDU6SXNzdWU0NzMwNTQ1NDU=",
    "number": 16,
    "title": "Support partial logs",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-25T20:26:05Z",
    "updated_at": "2019-07-25T20:26:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "@nibanks mentioned that the winquic implementation does logging in a circular buffer. If this runs out of space, the earliest logs (e.g., the ip addresses, initial connection ids, etc. might have been dropped).\r\n\r\nWe can't really force tools to support this, but potentially we can add text in the draft so people know they should take this into account."
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/15",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/15/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/15/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/15/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/15",
    "id": 472818662,
    "node_id": "MDU6SXNzdWU0NzI4MTg2NjI=",
    "number": 15,
    "title": "Specify time units used for ack_delay",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-25T11:43:19Z",
    "updated_at": "2019-08-23T10:54:57Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "And probably for other non-timestamp time values (like RTT)\r\n\r\nOptions:\r\n- Force people to use the resolution set in the \"configuration\"\r\n- Choose a fixed resolution (always milli or always micro)\r\n- Allow people to indicate resolution inside .data of each event \r\n- Combination: default is milli, add config parameter to specify, allow overrides in the .data, etc.\r\n\r\nThanks @jlaine for reporting."
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/14",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/14/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/14/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/14/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/14",
    "id": 471779917,
    "node_id": "MDU6SXNzdWU0NzE3Nzk5MTc=",
    "number": 14,
    "title": "Payload for packet_dropped",
    "user": {
      "login": "nibanks",
      "id": 20663557,
      "node_id": "MDQ6VXNlcjIwNjYzNTU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20663557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nibanks",
      "html_url": "https://github.com/nibanks",
      "followers_url": "https://api.github.com/users/nibanks/followers",
      "following_url": "https://api.github.com/users/nibanks/following{/other_user}",
      "gists_url": "https://api.github.com/users/nibanks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nibanks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nibanks/subscriptions",
      "organizations_url": "https://api.github.com/users/nibanks/orgs",
      "repos_url": "https://api.github.com/users/nibanks/repos",
      "events_url": "https://api.github.com/users/nibanks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nibanks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-23T15:54:46Z",
    "updated_at": "2019-10-07T17:03:30Z",
    "closed_at": "2019-10-07T17:03:30Z",
    "author_association": "NONE",
    "body": "First, it looks like there is no payload for this event. Is that expected? It's a hard problem. Practically, there is only one case in which you drop a packet, post decryption success, and that is because it's a duplicate packet number. Other than that, all other drop events would occur before a packet is decrypted. If it can't be decrypted you don't know the packet number, which would likely be the most interesting payload of this event. So, therefor it likely isn't too useful in having the packet number as payload.\r\n\r\nSo, in absence of including the packet number as payload, it might just be worth having a \"reason\" which is a string. That's what winquic has already at least."
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/13",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/13/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/13/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/13/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/13",
    "id": 471774804,
    "node_id": "MDU6SXNzdWU0NzE3NzQ4MDQ=",
    "number": 13,
    "title": "Invalid Assumptions in packet_sent triggers",
    "user": {
      "login": "nibanks",
      "id": 20663557,
      "node_id": "MDQ6VXNlcjIwNjYzNTU3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20663557?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nibanks",
      "html_url": "https://github.com/nibanks",
      "followers_url": "https://api.github.com/users/nibanks/followers",
      "following_url": "https://api.github.com/users/nibanks/following{/other_user}",
      "gists_url": "https://api.github.com/users/nibanks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nibanks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nibanks/subscriptions",
      "organizations_url": "https://api.github.com/users/nibanks/orgs",
      "repos_url": "https://api.github.com/users/nibanks/repos",
      "events_url": "https://api.github.com/users/nibanks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nibanks/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-07-23T15:45:02Z",
    "updated_at": "2019-10-07T17:03:31Z",
    "closed_at": "2019-10-07T17:03:31Z",
    "author_association": "NONE",
    "body": "The `packet_sent`'s `triggers` field makes the assumptions that a packet is sent because a previous packet is being retransmitted. For instance, in winquic a connection has a queue/set of what data needs to be sent. When data is (suspected) lost, the data in the packet is added back to the queue. Similarly for PTO, we mark an outstanding packet as lost, and if we don't have any, queue a PING frame.\r\n\r\nThe send logic just grabs data from the queue/set and builds up packets to be sent. There is no direction relationship between different packets.\r\n\r\nSo, IMO, triggers are the reason data is queued to be sent, not actually sent. What is actually sent will depend on the entire state of the send queue at the time the send logic actually executes.\r\n\r\nFor example, assume you have two outstanding packets that end up getting marked as lost:\r\n\r\n```\r\n  PktNum=1 { STREAM ID=1, Offset=0, Length=100 }\r\n  PktNum=2 { STREAM ID=1, Offset=100, Length=100 }\r\n```\r\n\r\nBoth are marked as lost. Around the same time, the app queues another 100 bytes on stream 1 to be sent. Then another packet ends up getting sent:\r\n\r\n```\r\n  PktNum=55 { STREAM ID=1, Offset=0, Length=300 }\r\n```"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/12",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/12/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/12/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/12/events",
    "html_url": "https://github.com/quiclog/internet-drafts/pull/12",
    "id": 471314958,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MzAwMDI4NTY1",
    "number": 12,
    "title": "Fixed typo in \"version_negotiation\" enum member",
    "user": {
      "login": "jlaine",
      "id": 1567624,
      "node_id": "MDQ6VXNlcjE1Njc2MjQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1567624?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jlaine",
      "html_url": "https://github.com/jlaine",
      "followers_url": "https://api.github.com/users/jlaine/followers",
      "following_url": "https://api.github.com/users/jlaine/following{/other_user}",
      "gists_url": "https://api.github.com/users/jlaine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jlaine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jlaine/subscriptions",
      "organizations_url": "https://api.github.com/users/jlaine/orgs",
      "repos_url": "https://api.github.com/users/jlaine/repos",
      "events_url": "https://api.github.com/users/jlaine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jlaine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-07-22T20:34:38Z",
    "updated_at": "2019-07-22T21:12:06Z",
    "closed_at": "2019-07-22T21:12:06Z",
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/quiclog/internet-drafts/pulls/12",
      "html_url": "https://github.com/quiclog/internet-drafts/pull/12",
      "diff_url": "https://github.com/quiclog/internet-drafts/pull/12.diff",
      "patch_url": "https://github.com/quiclog/internet-drafts/pull/12.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/11",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/11/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/11/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/11/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/11",
    "id": 434679110,
    "node_id": "MDU6SXNzdWU0MzQ2NzkxMTA=",
    "number": 11,
    "title": "Allow raw logging of packets and/or frames",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 1309472379,
        "node_id": "MDU6TGFiZWwxMzA5NDcyMzc5",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/quic-http3-fields",
        "name": "quic-http3-fields",
        "color": "d6354a",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2019-04-18T09:37:52Z",
    "updated_at": "2019-04-19T09:58:45Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "As mentioned by @kazuho on the mailing list, it would be useful to (re-)introduce the ability to log raw packet and/or frame contents, probably has a hex-encoded string. \r\n\r\nProbably easiest to add an additional field like this:\r\n```\r\n{\r\n    \"stream_type\": \"ACK\",\r\n    \"raw_hex\": \"0892e340dbaa354f800239dddc7be78406fe3726bea050bb8c56ab36\",\r\n    ...\r\n}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/10",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/10/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/10/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/10/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/10",
    "id": 430954231,
    "node_id": "MDU6SXNzdWU0MzA5NTQyMzE=",
    "number": 10,
    "title": "Numbers in JSON",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304364706,
        "node_id": "MDU6TGFiZWwxMzA0MzY0NzA2",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      },
      {
        "id": 1309472379,
        "node_id": "MDU6TGFiZWwxMzA5NDcyMzc5",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/quic-http3-fields",
        "name": "quic-http3-fields",
        "color": "d6354a",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-09T13:00:45Z",
    "updated_at": "2019-08-23T10:59:25Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Typically, integers in JavaScript and most JSON implementations are limited to 2^53-1.\r\nThis gives problems, as the VLIE values in the QUIC/H3 specs are 2^62-1.\r\n\r\nTwo options:\r\n- Allow bigger values in the JSON. Tools MUST use a JSON parser that can deal with this and a JavaScript engine that supports BigInt (currently limited to Chromium: https://caniuse.com/#search=bigint)\r\n- Encode all VLIE fields as strings. Tools have to deal with this themselves (most will probably just take the shortcut of assuming actual values will be < 2^53 and just use the JavaScript \"Number\" type). This is best for a wide tooling implementation area in browsers. \r\n\r\nCurrently, the draft uses option 2. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/9",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/9/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/9/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/9/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/9",
    "id": 430501683,
    "node_id": "MDU6SXNzdWU0MzA1MDE2ODM=",
    "number": 9,
    "title": "How descriptive should EVENT_TYPE names be?",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 1309472379,
        "node_id": "MDU6TGFiZWwxMzA5NDcyMzc5",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/quic-http3-fields",
        "name": "quic-http3-fields",
        "color": "d6354a",
        "default": false
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-08T15:01:36Z",
    "updated_at": "2019-10-07T19:46:27Z",
    "closed_at": "2019-10-07T19:46:26Z",
    "author_association": "MEMBER",
    "body": "For example:\r\nPACKET_RECEIVED        vs       1RTT_PACKET_RECEIVED\r\nFRAME_NEW                vs        ACK_FRAME_NEW\r\n\r\nFor the leftmost entries, one would add a \"type\" field to the \"DATA\" value, e.g., \r\n```\r\n{\r\n     \"type\": \"1RTT\"\r\n}\r\n```\r\n\r\nThe shorter form makes that we have a much less large amount of different EVENT_TYPEs, but also makes it a bit harder to parse for human readers + harder to quickly filter for tools. \r\nThe longer form is much more explicit, but requires much more definition up-front and a proliferation of different EVENT_TYPEs.\r\n\r\nWe could also break consistency. i.e., the original qlog used PACKET_RECEIVED with an explicit type in the DATA, but used ACK_FRAME_NEW for individual frames.\r\n\r\nCurrently, we use the short-form, since this is most similar to quic-trace and keeps it consistent if we want to log frames both in their own events and again when sending a packet. \r\n\r\nExtra edge-case: Errors\r\nIf you go for extreme short-form, you would just have a single ERROR EVENT_TYPE for each CATEGORY, and define the error type in the DATA.\r\nHowever, for easier manual debugging, tracking the specific type of error directly in the EVENT_TYPE is arguably easier. Maybe an exception should be made for errors? "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/8",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/8/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/8/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/8/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/8",
    "id": 429838485,
    "node_id": "MDU6SXNzdWU0Mjk4Mzg0ODU=",
    "number": 8,
    "title": "Allow index-based referencing for all event field names",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 1309471920,
        "node_id": "MDU6TGFiZWwxMzA5NDcxOTIw",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/high-level-schema",
        "name": "high-level-schema",
        "color": "7fd836",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-05T16:27:53Z",
    "updated_at": "2019-04-18T10:33:34Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Currently, we have a concept that you can have a \"groups_id\" object in \"common_fields\". \r\nIf you then have a \"group_id\" in your \"events_field\", the value for that with each event is an index into the \"groups_id\" field, to prevent replication of complex fields.\r\n\r\nWe could make this more general, applicable to each field name.\r\nE.g., if you know up-front which CATEGORY values you support, you could do something like:\r\n\r\n```\r\n{\r\n    \"common_fields\": {\r\n        \"group_id\": \"127ecc830d98f9d54a42c4f0842aa87e181a\",\r\n        \"ODCID\": \"127ecc830d98f9d54a42c4f0842aa87e181a\",\r\n        \"CATEGORY\": [\"PACKET_RX\", \"DATA_FRAME_NEW\"]\r\n        \"protocol_type\":  \"QUIC_HTTP3\",\r\n        \"reference_time\": \"1553986553572\"\r\n    },\r\n    \"event_fields\": [\r\n        \"delta_time\",\r\n        \"CATEGORY\",\r\n        \"EVENT_TYPE\",\r\n        \"TRIGGER\",\r\n        \"DATA\"\r\n    ],\r\n    \"events\": [[\r\n            2,\r\n            \"TRANSPORT\",\r\n            0,\r\n            \"LINE\",\r\n            [...]\r\n        ],[\r\n            7,\r\n            \"APPLICATION\",\r\n            1,\r\n            \"GET\",\r\n            [...]\r\n        ],\r\n        ...\r\n    ]\r\n}\r\n```\r\n\r\nWe would then have a general rule:\r\n\r\n> If the field is present as a value of type array in \"common_fields\" AND the field-name is present in \"event_fields\", the value per-event MUST be treated as an index into the \"common_fields\" entry, rather than taken as a direct value. \r\n\r\n(\"groups_id\" would then also be renamed to \"group_id\" in \"common_fields\")\r\n\r\nThis would allow smaller file sizes (and less string writing overhead) for applications that have a static list of e.g., CATEGORY or EVENT_TYPE up front.\r\nDownside 1 is that it complicates the tools reading the file (but only a bit imo).\r\nDownside 2 is that is complicates humans reading the file (so it depends on the use case).\r\n   (either way, it's easy to go from 1 to the other with a simple script)\r\n\r\n-----------------------------------------------------------------------------------\r\n\r\nThis concept could be extended to make it a fully self-describing format.\r\nIn other words, we could also describe the fields in the DATA for known events up-front and replace those entries with in-order arrays of the values instead of key-value object definitions.\r\n\r\nVery high-level concept (probably needs proper description of the fields etc.):\r\n```\r\n\"data_fields\" : {\r\n      \"TRANSPORT+PACKET_SENT\" : [\r\n         \"frame_type\",\r\n         \"packet_number\",\r\n         \"frames\"\r\n     ]\r\n}\r\n...\r\n[ 57, \"TRANSPORT\", \"PACKET_SENT\", \"TRIGGER\", [\"STREAM\", 15, [...]]]\r\n```\r\nTaking this all to the extreme, you could have a fully self-describing format that lists all known events (and potentially some values, similar to QPack's static table) up-top and then each entry just uses indexes + potentially a few raw values. However, I'm personally not of the opinion this added complexity is worth it. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/7",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/7/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/7/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/7/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/7",
    "id": 429822287,
    "node_id": "MDU6SXNzdWU0Mjk4MjIyODc=",
    "number": 7,
    "title": "Use cases for the TRIGGER field ",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 1309471920,
        "node_id": "MDU6TGFiZWwxMzA5NDcxOTIw",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/high-level-schema",
        "name": "high-level-schema",
        "color": "7fd836",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2019-04-05T15:48:06Z",
    "updated_at": "2019-07-31T13:47:10Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "To have the TRIGGER as a top-level field, there need to be good use-cases and people willing to use this in their tools. \r\n\r\nSince the TRIGGER will only be useful for specific events (e.g., PACKET_RETRANSMIT can be due to several loss-detection related situations) and it's value might in some cases also just be deduced from the context of surrounding log messages, it is debatable it will have much use in practice. \r\n\r\nAn alternate approach could be to log it as part of the DATA field of specific events, instead of as a top-level field. "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/6",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/6/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/6/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/6/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/6",
    "id": 429777392,
    "node_id": "MDU6SXNzdWU0Mjk3NzczOTI=",
    "number": 6,
    "title": "Define the semantics of RX and TX for NETWORK vantage point",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 1309471920,
        "node_id": "MDU6TGFiZWwxMzA5NDcxOTIw",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/high-level-schema",
        "name": "high-level-schema",
        "color": "7fd836",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-05T14:15:11Z",
    "updated_at": "2019-04-09T10:08:16Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "For CLIENT and SERVER, the difference between RECEIVE (RX) and TRANSMIT (TX) is obvious. Not so for an in-network observer (or, e.g., a proxy server), where these terms make less sense...\r\n\r\nSome options:\r\n- Type is NETWORK_CLIENT and NETWORK_SERVER (instead of NETWORK)\r\n- add separate \"flow\" field indicating if we use CLIENT or SERVER semantics (currently in the draft)\r\n- add separate metadata field indicating which 5-tuple is the conceptual \"client\" and which is the \"server\" and use RX/TX based on that\r\n- Don't fix this and let the tooling layer figure it out (if packet nr 6 is a client TX and a RX in the NETWORK trace, the network is from the viewpoint of the SERVER)\r\n\r\nBroader discussion: does it make sense to log packets as PACKET_TX and _RX here? how about instead a PACKET event (similar to how wireshark does it). However: this doesn't make sense for (stateful) proxies that do act as both client+server when ~transforming the traffic (e.g., Facebook's load balancer). \r\n"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/5",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/5/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/5/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/5/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/5",
    "id": 429730096,
    "node_id": "MDU6SXNzdWU0Mjk3MzAwOTY=",
    "number": 5,
    "title": "Decide upon a language to define the schema definition",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304364706,
        "node_id": "MDU6TGFiZWwxMzA0MzY0NzA2",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/editorial",
        "name": "editorial",
        "color": "0e8a16",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-05T12:26:48Z",
    "updated_at": "2019-04-08T14:16:22Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "We need to indicate various things, such as field types (int, string, ...), whether fields are required or optional, give example values for fields, etc.\r\n\r\nWe could use normal JSON-schema for this, but this is quite verbose...\r\nWe could also use TypeScript, though this is non-standard...\r\nOther RFCs are known to use their own specific languages for this (i.e., see TLS 1.3's type definitions), but maybe there is something workable already out there. \r\n\r\nCurrently, we use TypeScript format, since this is used in the Quicker prototype qlog implementation directly + is easy enough to parse for newcomers. "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/4",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/4/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/4/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/4",
    "id": 429724377,
    "node_id": "MDU6SXNzdWU0Mjk3MjQzNzc=",
    "number": 4,
    "title": "Readability vs file size",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-05T12:11:32Z",
    "updated_at": "2019-04-16T10:04:50Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "We would like to keep the file (semi-) human readable.\r\nThis means more advanced techniques like listing all fields in an ENUM up-front and then referencing to them by index is not optimal.\r\n\r\nHowever, when repeating strings, we might want to limit the length of individual fields. \r\ne.g., TRANS instead of TRANSPORT, APP instead of APPLICATION, RX instead of RECEIVE, etc. \r\n\r\nCurrent numbers (with readable strings):\r\n- qlog version without whitespace is about 4x the size of the binary .qtr file for the quic-trace example file (3.5MB to 823KB)\r\n- qlog version with whitespace is 10.6MB. However, this should matter little, since if manually reviewing large logs, you'll probably use a text editor that can auto-format the json from the version without whitespace\r\n\r\n4x size difference is a lot, but better than the direct .json protobuf transform, which clocks in at 14MB. "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/3",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/3/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/3/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/3",
    "id": 429710047,
    "node_id": "MDU6SXNzdWU0Mjk3MTAwNDc=",
    "number": 3,
    "title": "Aggregated metrics",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-05T11:30:41Z",
    "updated_at": "2019-04-16T10:06:33Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Example: in-network logger aggregates over a period of time and sends back summarized data in 1 go (e.g., average RTT in past 10s, measured over 10k packets).\r\n\r\nThis can be supported in a variety of ways.\r\n\r\nThe easiest would probably be a new EVENT type that just contains the aggregated metrics.\r\nHowever, this depends on which types of aggregated data you want to pass. \r\n\r\ne.g., saying: median RTT was 50ms over the past 5s and we saw 1k packets in that time is fine\r\n\r\ne.g., saying: median RTT was 50ms across these 5 connections identified by these 4-tuples, is not really adhering to the semantics of the original setup.\r\n\r\nWe need more input from the people doing aggregated use cases to see how this data would be used and which types of metadata is needed to make an informed decision. "
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/2",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/2/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/2/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/2",
    "id": 429354306,
    "node_id": "MDU6SXNzdWU0MjkzNTQzMDY=",
    "number": 2,
    "title": "Streaming format",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 1309471920,
        "node_id": "MDU6TGFiZWwxMzA5NDcxOTIw",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/high-level-schema",
        "name": "high-level-schema",
        "color": "7fd836",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-04T15:47:41Z",
    "updated_at": "2019-04-08T14:18:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "Plain JSON is not entirely streamable... it requires its fields to be closed properly (by ] and }) at the end.\r\n\r\ne.g.,\r\n```\r\n\"events\": [\r\n           { \"key\": \"val\" }\r\n```\r\nWill fail, but \r\n```\r\n\"events\": [\r\n           { \"key\": \"val\" }\r\n]\r\n```\r\nwill succeed. \r\n\r\nHowever, one could employ a streaming JSON parser (e.g., http://oboejs.com/) and ignore unclosed fields at the end that way. \r\nFor the way the format is currently defined, an implementation would then write the \"header\" of the qlog file, and then it could stream individual events that are just appended to the file. \r\nIf the file isn't properly closed, that's not a problem: the streaming parser user just ignores those errors.\r\nHowever, this breaks compatibility with the built-in parsers in many stdlibs and the browsers themselves.\r\nIt would also be possible to write a simple postprocessing tool that simply appends the necessary \"closing\" characters to a qlog file if it isn't complete, though that adds another step in a pipeline... \r\n\r\nThere are also various JSON-subformats that address this problem (see https://en.wikipedia.org/wiki/JSON_streaming), but they also do not seem to be supported in the standard JSON parsers for many platforms...\r\n\r\n**Given all this, my personal preference is to stay with just the normal JSON format and tools are recommended to use a streaming parser.** \r\n\r\n\r\nExample of how the browser's built-in JSON parser does not support special JSON:\r\n![2019-04-04 17_02_41](https://user-images.githubusercontent.com/2240689/55566226-8df5ff80-56fb-11e9-9a60-ab0fe703cf27.png)\r\n\r\nExample of how a streaming parser (oboe) does handle this properly:\r\n![proof](https://user-images.githubusercontent.com/2240689/55569216-77eb3d80-5701-11e9-86af-2b1a5b79ea2f.png)\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/quiclog/internet-drafts/issues/1",
    "repository_url": "https://api.github.com/repos/quiclog/internet-drafts",
    "labels_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/1/labels{/name}",
    "comments_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/1/comments",
    "events_url": "https://api.github.com/repos/quiclog/internet-drafts/issues/1/events",
    "html_url": "https://github.com/quiclog/internet-drafts/issues/1",
    "id": 429289167,
    "node_id": "MDU6SXNzdWU0MjkyODkxNjc=",
    "number": 1,
    "title": "Allow flexible fields definitions",
    "user": {
      "login": "rmarx",
      "id": 2240689,
      "node_id": "MDQ6VXNlcjIyNDA2ODk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2240689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rmarx",
      "html_url": "https://github.com/rmarx",
      "followers_url": "https://api.github.com/users/rmarx/followers",
      "following_url": "https://api.github.com/users/rmarx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmarx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rmarx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmarx/subscriptions",
      "organizations_url": "https://api.github.com/users/rmarx/orgs",
      "repos_url": "https://api.github.com/users/rmarx/repos",
      "events_url": "https://api.github.com/users/rmarx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rmarx/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1304363852,
        "node_id": "MDU6TGFiZWwxMzA0MzYzODUy",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/design",
        "name": "design",
        "color": "1d76db",
        "default": false
      },
      {
        "id": 1309471920,
        "node_id": "MDU6TGFiZWwxMzA5NDcxOTIw",
        "url": "https://api.github.com/repos/quiclog/internet-drafts/labels/high-level-schema",
        "name": "high-level-schema",
        "color": "7fd836",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2019-04-04T13:46:52Z",
    "updated_at": "2019-04-08T14:18:05Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "body": "The fields that are logged for each individual event depend on the context of usage of the format.\r\n\r\nE.g., if you split your logs per connection-id yourself, you do not need to log the connection-id for each event.\r\nHowever, if you do not log only QUIC data, but also ICMP/TCP info (e.g., the in-network measurement use-case), you need an additional field \"protocol-type\".\r\n\r\nProposal:\r\nAllow common fields to be set in each \"trace\" header.\r\n\r\n```\r\n{\r\n     \"common_fields\": [ \"connection_id\": \"0xdeadbeef\", \"protocol-type\": \"QUIC\" ],  \r\n     \"field_headers: [\"timestamp\", \"category\", \"type\", \"trigger\", \"data\"],  \r\n     \"events\": [ ... ]  \r\n}\r\n```\r\n\r\nIf you do not log a field, you just leave it out of both common_fields and field_headers. \r\n"
  }

]
